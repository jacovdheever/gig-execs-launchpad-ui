[build]
  command = "bun run build"
  publish = "dist"

[build.environment]
  NODE_VERSION = "18"
  SECRETS_SCAN_ENABLED = "false"

# Build plugins for optimization
[[plugins]]
  package = "@netlify/plugin-gzip"

[[plugins]]
  package = "@netlify/plugin-brotli"

# Redirects for SPA routing (if using React Router)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers for all pages
[[headers]]
  for = "/*"
  [headers.values]
    # Content Security Policy - Comprehensive protection against XSS and injection attacks
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.supabase.co https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://*.supabase.co https://images.unsplash.com https://img.youtube.com https://i.vimeocdn.com https://cdn.loom.com https://embed.wistia.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://*.supabase.co https://api.stripe.com https://*.resend.com; frame-src https://js.stripe.com https://www.youtube.com https://player.vimeo.com https://www.loom.com https://fast.wistia.net; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; object-src 'none'; upgrade-insecure-requests"
    
    # HTTP Strict Transport Security - Force HTTPS
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    
    # Prevent clickjacking attacks
    X-Frame-Options = "DENY"
    
    # XSS Protection (legacy browsers)
    X-XSS-Protection = "1; mode=block"
    
    # Prevent MIME type sniffing
    X-Content-Type-Options = "nosniff"
    
    # Control referrer information
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Feature Policy - Control browser features
    Permissions-Policy = "geolocation=(), microphone=(), camera=(), payment=(self), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), autoplay=(), fullscreen=(self), display-capture=(), encrypted-media=(), picture-in-picture=(), sync-xhr=()"
    
    # Cross-Origin policies
    Cross-Origin-Opener-Policy = "same-origin"
    Cross-Origin-Resource-Policy = "same-origin"
    Cross-Origin-Embedder-Policy = "unsafe-none"
    
    # Additional security headers
    X-DNS-Prefetch-Control = "off"
    X-Download-Options = "noopen"
    X-Permitted-Cross-Domain-Policies = "none"
    
    # Server information hiding
    Server = ""
    X-Powered-By = ""
    
    # Cache control for security-sensitive content
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# Security headers for Netlify Functions (API endpoints)
[[headers]]
  for = "/.netlify/functions/*"
  [headers.values]
    # API-specific security headers
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Prevent caching of API responses
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    
    # CORS headers (handled by functions, but add as backup)
    Access-Control-Allow-Origin = "https://gigexecs.com, https://www.gigexecs.com, https://develop--gigexecs.netlify.app, https://gigexecs.netlify.app"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With"
    Access-Control-Max-Age = "86400"
    
    # Server information hiding
    Server = ""
    X-Powered-By = ""

# Compression Configuration

# Enable compression for all text-based files
[[headers]]
  for = "/*.js"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.css"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.html"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.json"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.xml"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.txt"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Content-Encoding = "gzip, br"
    Vary = "Accept-Encoding"

# Optimized Caching Strategy

# JavaScript and CSS assets (hashed filenames - can cache forever)
[[headers]]
  for = "/assets/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/assets/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Vary = "Accept-Encoding"

# Images - long cache with revalidation
[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=2592000, must-revalidate"
    Vary = "Accept-Encoding"

# SVG files - long cache
[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=2592000, must-revalidate"
    Vary = "Accept-Encoding"

# Video files - long cache
[[headers]]
  for = "/videos/*"
  [headers.values]
    Cache-Control = "public, max-age=2592000, must-revalidate"
    Vary = "Accept-Encoding"

# Fonts - very long cache
[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.ttf"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Vary = "Accept-Encoding"

# Icons and favicons - medium cache
[[headers]]
  for = "/*.ico"
  [headers.values]
    Cache-Control = "public, max-age=86400, must-revalidate"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=86400, must-revalidate"
    Vary = "Accept-Encoding"

# HTML files - short cache with revalidation
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Vary = "Accept-Encoding"

# JSON files - short cache
[[headers]]
  for = "/*.json"
  [headers.values]
    Cache-Control = "public, max-age=300, must-revalidate"
    Vary = "Accept-Encoding"

# Robots.txt and sitemap - medium cache
[[headers]]
  for = "/robots.txt"
  [headers.values]
    Cache-Control = "public, max-age=86400, must-revalidate"

[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Cache-Control = "public, max-age=86400, must-revalidate" 